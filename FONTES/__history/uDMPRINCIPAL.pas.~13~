unit uDMPRINCIPAL;

interface

uses
  System.SysUtils, System.Classes, Data.DB, Data.SqlExpr,System.IniFiles,IWSystem,
  Data.DBXFirebird,vcl.Dialogs, Data.FMTBcd, Datasnap.DBClient,
  Datasnap.Provider;

type
  TDMPRINCIPAL = class(TDataModule)
    Conexao: TSQLConnection;
    dtProdutos: TSQLDataSet;
    dtProdutosID: TIntegerField;
    dtProdutosDESCRICAO: TStringField;
    dtProdutosCOD_BARRA: TStringField;
    dtProdutosPRECO_VENDA: TFMTBCDField;
    dtProdutosESTOQUE_MINIMO: TFMTBCDField;
    dtProdutosPOSICAO_ESTOQUE: TFMTBCDField;
    dtspProdutos: TDataSetProvider;
    cdsProdutos: TClientDataSet;
    cdsProdutosID: TIntegerField;
    cdsProdutosDESCRICAO: TStringField;
    cdsProdutosCOD_BARRA: TStringField;
    cdsProdutosPRECO_VENDA: TFMTBCDField;
    cdsProdutosESTOQUE_MINIMO: TFMTBCDField;
    cdsProdutosPOSICAO_ESTOQUE: TFMTBCDField;
    dtsCadProdutos: TSQLDataSet;
    dtspCadProdutos: TDataSetProvider;
    cdsCadProdutos: TClientDataSet;
    SPCadProdutos: TSQLStoredProc;
    procedure ConexaoBeforeConnect(Sender: TObject);
    procedure cdsCadProdutosNewRecord(DataSet: TDataSet);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DMPRINCIPAL: TDMPRINCIPAL;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TDMPRINCIPAL.cdsCadProdutosNewRecord(DataSet: TDataSet);
begin
  DataSet.FieldByName('ID').AsInteger:=-1;
end;

procedure TDMPRINCIPAL.ConexaoBeforeConnect(Sender: TObject);
var
Arquivo: TIniFile{uses IniFiles};
begin
  Try
    Arquivo:= TIniFile.Create(gsAppPath +'CONFIG.ini');
    with Conexao do
    begin
      Params.Values['DATABASE'] := Arquivo.ReadString('CONFIG','DATABASE','');
      Params.Values['USERNAME'] := Arquivo.ReadString('CONFIG','USERNAME','');
      Params.Values['PASSWORD'] := Arquivo.ReadString('CONFIG','PASSWORD','');
      Arquivo.Free
    end;
  except
    on E : Exception do
      ShowMessage(E.ClassName+' Erro ao conectar com o banco de dados. : '+E.Message);
  end;
end;
end.
